//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.1.
// 
#pragma warning disable 1591

namespace WinWebServiceMonitor.WsCommon {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="CommonSoap", Namespace="http://isocare.org/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(object[]))]
    public partial class Common : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetPasswordServiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetConnectionStringOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetConstantValueOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataTableOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNewDocNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNewDocumentNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStatusApplicationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStatusApplicationDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetApplicationThaiOperationCompleted;
        
        private System.Threading.SendOrPostCallback BaseFormatMemberNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBranchIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPermissMenuOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDDDWXmlOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPrinterFormSetsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPrinterFormSetsDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDefaultPrinterFormSetsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDefaultPrinterFormSetsByIPOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetXmlDataStoreOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTextDataStoreOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProcessStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveProcessOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReadThaiBathOperationCompleted;
        
        private System.Threading.SendOrPostCallback LastDayOfmonthOperationCompleted;
        
        private System.Threading.SendOrPostCallback zPhysicalPathRegistryOperationCompleted;
        
        private System.Threading.SendOrPostCallback zPhysicalPathXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertDataWindowOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateDataWindowOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveReportExcelOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveReportExcelEtnOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExportSMSOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveTextFileOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Common() {
            this.Url = global::WinWebServiceMonitor.Properties.Settings.Default.WinWebServiceMonitor_WsCommon_Common;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetPasswordServiceCompletedEventHandler GetPasswordServiceCompleted;
        
        /// <remarks/>
        public event GetConnectionStringCompletedEventHandler GetConnectionStringCompleted;
        
        /// <remarks/>
        public event GetConstantValueCompletedEventHandler GetConstantValueCompleted;
        
        /// <remarks/>
        public event GetDataTableCompletedEventHandler GetDataTableCompleted;
        
        /// <remarks/>
        public event GetNewDocNoCompletedEventHandler GetNewDocNoCompleted;
        
        /// <remarks/>
        public event GetNewDocumentNoCompletedEventHandler GetNewDocumentNoCompleted;
        
        /// <remarks/>
        public event GetStatusApplicationCompletedEventHandler GetStatusApplicationCompleted;
        
        /// <remarks/>
        public event GetStatusApplicationDataCompletedEventHandler GetStatusApplicationDataCompleted;
        
        /// <remarks/>
        public event GetApplicationThaiCompletedEventHandler GetApplicationThaiCompleted;
        
        /// <remarks/>
        public event BaseFormatMemberNoCompletedEventHandler BaseFormatMemberNoCompleted;
        
        /// <remarks/>
        public event GetBranchIdCompletedEventHandler GetBranchIdCompleted;
        
        /// <remarks/>
        public event VerifyLoginCompletedEventHandler VerifyLoginCompleted;
        
        /// <remarks/>
        public event GetPermissMenuCompletedEventHandler GetPermissMenuCompleted;
        
        /// <remarks/>
        public event GetDDDWXmlCompletedEventHandler GetDDDWXmlCompleted;
        
        /// <remarks/>
        public event GetPrinterFormSetsCompletedEventHandler GetPrinterFormSetsCompleted;
        
        /// <remarks/>
        public event GetPrinterFormSetsDataCompletedEventHandler GetPrinterFormSetsDataCompleted;
        
        /// <remarks/>
        public event GetDefaultPrinterFormSetsCompletedEventHandler GetDefaultPrinterFormSetsCompleted;
        
        /// <remarks/>
        public event GetDefaultPrinterFormSetsByIPCompletedEventHandler GetDefaultPrinterFormSetsByIPCompleted;
        
        /// <remarks/>
        public event GetXmlDataStoreCompletedEventHandler GetXmlDataStoreCompleted;
        
        /// <remarks/>
        public event GetTextDataStoreCompletedEventHandler GetTextDataStoreCompleted;
        
        /// <remarks/>
        public event GetProcessStatusCompletedEventHandler GetProcessStatusCompleted;
        
        /// <remarks/>
        public event RemoveProcessCompletedEventHandler RemoveProcessCompleted;
        
        /// <remarks/>
        public event ReadThaiBathCompletedEventHandler ReadThaiBathCompleted;
        
        /// <remarks/>
        public event LastDayOfmonthCompletedEventHandler LastDayOfmonthCompleted;
        
        /// <remarks/>
        public event zPhysicalPathRegistryCompletedEventHandler zPhysicalPathRegistryCompleted;
        
        /// <remarks/>
        public event zPhysicalPathXMLCompletedEventHandler zPhysicalPathXMLCompleted;
        
        /// <remarks/>
        public event InsertDataWindowCompletedEventHandler InsertDataWindowCompleted;
        
        /// <remarks/>
        public event UpdateDataWindowCompletedEventHandler UpdateDataWindowCompleted;
        
        /// <remarks/>
        public event SaveReportExcelCompletedEventHandler SaveReportExcelCompleted;
        
        /// <remarks/>
        public event SaveReportExcelEtnCompletedEventHandler SaveReportExcelEtnCompleted;
        
        /// <remarks/>
        public event ExportSMSCompletedEventHandler ExportSMSCompleted;
        
        /// <remarks/>
        public event SaveTextFileCompletedEventHandler SaveTextFileCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://isocare.org/GetPasswordService", RequestNamespace="http://isocare.org/", ResponseNamespace="http://isocare.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPasswordService() {
            object[] results = this.Invoke("GetPasswordService", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPasswordServiceAsync() {
            this.GetPasswordServiceAsync(null);
        }
        
        /// <remarks/>
        public void GetPasswordServiceAsync(object userState) {
            if ((this.GetPasswordServiceOperationCompleted == null)) {
                this.GetPasswordServiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPasswordServiceOperationCompleted);
            }
            this.InvokeAsync("GetPasswordService", new object[0], this.GetPasswordServiceOperationCompleted, userState);
        }
        
        private void OnGetPasswordServiceOperationCompleted(object arg) {
            if ((this.GetPasswordServiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPasswordServiceCompleted(this, new GetPasswordServiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://isocare.org/GetConnectionString", RequestNamespace="http://isocare.org/", ResponseNamespace="http://isocare.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetConnectionString(string wsPass) {
            object[] results = this.Invoke("GetConnectionString", new object[] {
                        wsPass});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetConnectionStringAsync(string wsPass) {
            this.GetConnectionStringAsync(wsPass, null);
        }
        
        /// <remarks/>
        public void GetConnectionStringAsync(string wsPass, object userState) {
            if ((this.GetConnectionStringOperationCompleted == null)) {
                this.GetConnectionStringOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetConnectionStringOperationCompleted);
            }
            this.InvokeAsync("GetConnectionString", new object[] {
                        wsPass}, this.GetConnectionStringOperationCompleted, userState);
        }
        
        private void OnGetConnectionStringOperationCompleted(object arg) {
            if ((this.GetConnectionStringCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetConnectionStringCompleted(this, new GetConnectionStringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://isocare.org/GetConstantValue", RequestNamespace="http://isocare.org/", ResponseNamespace="http://isocare.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetConstantValue(string wsPass, string param) {
            object[] results = this.Invoke("GetConstantValue", new object[] {
                        wsPass,
                        param});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetConstantValueAsync(string wsPass, string param) {
            this.GetConstantValueAsync(wsPass, param, null);
        }
        
        /// <remarks/>
        public void GetConstantValueAsync(string wsPass, string param, object userState) {
            if ((this.GetConstantValueOperationCompleted == null)) {
                this.GetConstantValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetConstantValueOperationCompleted);
            }
            this.InvokeAsync("GetConstantValue", new object[] {
                        wsPass,
                        param}, this.GetConstantValueOperationCompleted, userState);
        }
        
        private void OnGetConstantValueOperationCompleted(object arg) {
            if ((this.GetConstantValueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetConstantValueCompleted(this, new GetConstantValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://isocare.org/GetDataTable", RequestNamespace="http://isocare.org/", ResponseNamespace="http://isocare.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetDataTable(string wsPass, string keyWord, string tName) {
            object[] results = this.Invoke("GetDataTable", new object[] {
                        wsPass,
                        keyWord,
                        tName});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataTableAsync(string wsPass, string keyWord, string tName) {
            this.GetDataTableAsync(wsPass, keyWord, tName, null);
        }
        
        /// <remarks/>
        public void GetDataTableAsync(string wsPass, string keyWord, string tName, object userState) {
            if ((this.GetDataTableOperationCompleted == null)) {
                this.GetDataTableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataTableOperationCompleted);
            }
            this.InvokeAsync("GetDataTable", new object[] {
                        wsPass,
                        keyWord,
                        tName}, this.GetDataTableOperationCompleted, userState);
        }
        
        private void OnGetDataTableOperationCompleted(object arg) {
            if ((this.GetDataTableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataTableCompleted(this, new GetDataTableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://isocare.org/GetNewDocNo", RequestNamespace="http://isocare.org/", ResponseNamespace="http://isocare.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetNewDocNo(string wsPass, string docCode) {
            object[] results = this.Invoke("GetNewDocNo", new object[] {
                        wsPass,
                        docCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetNewDocNoAsync(string wsPass, string docCode) {
            this.GetNewDocNoAsync(wsPass, docCode, null);
        }
        
        /// <remarks/>
        public void GetNewDocNoAsync(string wsPass, string docCode, object userState) {
            if ((this.GetNewDocNoOperationCompleted == null)) {
                this.GetNewDocNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNewDocNoOperationCompleted);
            }
            this.InvokeAsync("GetNewDocNo", new object[] {
                        wsPass,
                        docCode}, this.GetNewDocNoOperationCompleted, userState);
        }
        
        private void OnGetNewDocNoOperationCompleted(object arg) {
            if ((this.GetNewDocNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNewDocNoCompleted(this, new GetNewDocNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://isocare.org/GetNewDocumentNo", RequestNamespace="http://isocare.org/", ResponseNamespace="http://isocare.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetNewDocumentNo(string wsPass, string docCode) {
            object[] results = this.Invoke("GetNewDocumentNo", new object[] {
                        wsPass,
                        docCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetNewDocumentNoAsync(string wsPass, string docCode) {
            this.GetNewDocumentNoAsync(wsPass, docCode, null);
        }
        
        /// <remarks/>
        public void GetNewDocumentNoAsync(string wsPass, string docCode, object userState) {
            if ((this.GetNewDocumentNoOperationCompleted == null)) {
                this.GetNewDocumentNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNewDocumentNoOperationCompleted);
            }
            this.InvokeAsync("GetNewDocumentNo", new object[] {
                        wsPass,
                        docCode}, this.GetNewDocumentNoOperationCompleted, userState);
        }
        
        private void OnGetNewDocumentNoOperationCompleted(object arg) {
            if ((this.GetNewDocumentNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNewDocumentNoCompleted(this, new GetNewDocumentNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://isocare.org/GetStatusApplication", RequestNamespace="http://isocare.org/", ResponseNamespace="http://isocare.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetStatusApplication(string wsPass) {
            object[] results = this.Invoke("GetStatusApplication", new object[] {
                        wsPass});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetStatusApplicationAsync(string wsPass) {
            this.GetStatusApplicationAsync(wsPass, null);
        }
        
        /// <remarks/>
        public void GetStatusApplicationAsync(string wsPass, object userState) {
            if ((this.GetStatusApplicationOperationCompleted == null)) {
                this.GetStatusApplicationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStatusApplicationOperationCompleted);
            }
            this.InvokeAsync("GetStatusApplication", new object[] {
                        wsPass}, this.GetStatusApplicationOperationCompleted, userState);
        }
        
        private void OnGetStatusApplicationOperationCompleted(object arg) {
            if ((this.GetStatusApplicationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStatusApplicationCompleted(this, new GetStatusApplicationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://isocare.org/GetStatusApplicationData", RequestNamespace="http://isocare.org/", ResponseNamespace="http://isocare.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetStatusApplicationData(string wsPass) {
            object[] results = this.Invoke("GetStatusApplicationData", new object[] {
                        wsPass});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetStatusApplicationDataAsync(string wsPass) {
            this.GetStatusApplicationDataAsync(wsPass, null);
        }
        
        /// <remarks/>
        public void GetStatusApplicationDataAsync(string wsPass, object userState) {
            if ((this.GetStatusApplicationDataOperationCompleted == null)) {
                this.GetStatusApplicationDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStatusApplicationDataOperationCompleted);
            }
            this.InvokeAsync("GetStatusApplicationData", new object[] {
                        wsPass}, this.GetStatusApplicationDataOperationCompleted, userState);
        }
        
        private void OnGetStatusApplicationDataOperationCompleted(object arg) {
            if ((this.GetStatusApplicationDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStatusApplicationDataCompleted(this, new GetStatusApplicationDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://isocare.org/GetApplicationThai", RequestNamespace="http://isocare.org/", ResponseNamespace="http://isocare.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetApplicationThai(string wsPass, string app) {
            object[] results = this.Invoke("GetApplicationThai", new object[] {
                        wsPass,
                        app});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetApplicationThaiAsync(string wsPass, string app) {
            this.GetApplicationThaiAsync(wsPass, app, null);
        }
        
        /// <remarks/>
        public void GetApplicationThaiAsync(string wsPass, string app, object userState) {
            if ((this.GetApplicationThaiOperationCompleted == null)) {
                this.GetApplicationThaiOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetApplicationThaiOperationCompleted);
            }
            this.InvokeAsync("GetApplicationThai", new object[] {
                        wsPass,
                        app}, this.GetApplicationThaiOperationCompleted, userState);
        }
        
        private void OnGetApplicationThaiOperationCompleted(object arg) {
            if ((this.GetApplicationThaiCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetApplicationThaiCompleted(this, new GetApplicationThaiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://isocare.org/BaseFormatMemberNo", RequestNamespace="http://isocare.org/", ResponseNamespace="http://isocare.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string BaseFormatMemberNo(string wsPass, string memberNo) {
            object[] results = this.Invoke("BaseFormatMemberNo", new object[] {
                        wsPass,
                        memberNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void BaseFormatMemberNoAsync(string wsPass, string memberNo) {
            this.BaseFormatMemberNoAsync(wsPass, memberNo, null);
        }
        
        /// <remarks/>
        public void BaseFormatMemberNoAsync(string wsPass, string memberNo, object userState) {
            if ((this.BaseFormatMemberNoOperationCompleted == null)) {
                this.BaseFormatMemberNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBaseFormatMemberNoOperationCompleted);
            }
            this.InvokeAsync("BaseFormatMemberNo", new object[] {
                        wsPass,
                        memberNo}, this.BaseFormatMemberNoOperationCompleted, userState);
        }
        
        private void OnBaseFormatMemberNoOperationCompleted(object arg) {
            if ((this.BaseFormatMemberNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BaseFormatMemberNoCompleted(this, new BaseFormatMemberNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://isocare.org/GetBranchId", RequestNamespace="http://isocare.org/", ResponseNamespace="http://isocare.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetBranchId(string wsPass) {
            object[] results = this.Invoke("GetBranchId", new object[] {
                        wsPass});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetBranchIdAsync(string wsPass) {
            this.GetBranchIdAsync(wsPass, null);
        }
        
        /// <remarks/>
        public void GetBranchIdAsync(string wsPass, object userState) {
            if ((this.GetBranchIdOperationCompleted == null)) {
                this.GetBranchIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBranchIdOperationCompleted);
            }
            this.InvokeAsync("GetBranchId", new object[] {
                        wsPass}, this.GetBranchIdOperationCompleted, userState);
        }
        
        private void OnGetBranchIdOperationCompleted(object arg) {
            if ((this.GetBranchIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBranchIdCompleted(this, new GetBranchIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://isocare.org/VerifyLogin", RequestNamespace="http://isocare.org/", ResponseNamespace="http://isocare.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] VerifyLogin(string wsPass, string username, string password, string application) {
            object[] results = this.Invoke("VerifyLogin", new object[] {
                        wsPass,
                        username,
                        password,
                        application});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void VerifyLoginAsync(string wsPass, string username, string password, string application) {
            this.VerifyLoginAsync(wsPass, username, password, application, null);
        }
        
        /// <remarks/>
        public void VerifyLoginAsync(string wsPass, string username, string password, string application, object userState) {
            if ((this.VerifyLoginOperationCompleted == null)) {
                this.VerifyLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyLoginOperationCompleted);
            }
            this.InvokeAsync("VerifyLogin", new object[] {
                        wsPass,
                        username,
                        password,
                        application}, this.VerifyLoginOperationCompleted, userState);
        }
        
        private void OnVerifyLoginOperationCompleted(object arg) {
            if ((this.VerifyLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyLoginCompleted(this, new VerifyLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://isocare.org/GetPermissMenu", RequestNamespace="http://isocare.org/", ResponseNamespace="http://isocare.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetPermissMenu(string wsPass, string username, string application) {
            object[] results = this.Invoke("GetPermissMenu", new object[] {
                        wsPass,
                        username,
                        application});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetPermissMenuAsync(string wsPass, string username, string application) {
            this.GetPermissMenuAsync(wsPass, username, application, null);
        }
        
        /// <remarks/>
        public void GetPermissMenuAsync(string wsPass, string username, string application, object userState) {
            if ((this.GetPermissMenuOperationCompleted == null)) {
                this.GetPermissMenuOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPermissMenuOperationCompleted);
            }
            this.InvokeAsync("GetPermissMenu", new object[] {
                        wsPass,
                        username,
                        application}, this.GetPermissMenuOperationCompleted, userState);
        }
        
        private void OnGetPermissMenuOperationCompleted(object arg) {
            if ((this.GetPermissMenuCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPermissMenuCompleted(this, new GetPermissMenuCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://isocare.org/GetDDDWXml", RequestNamespace="http://isocare.org/", ResponseNamespace="http://isocare.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDDDWXml(string wsPass, string ddwobj) {
            object[] results = this.Invoke("GetDDDWXml", new object[] {
                        wsPass,
                        ddwobj});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDDDWXmlAsync(string wsPass, string ddwobj) {
            this.GetDDDWXmlAsync(wsPass, ddwobj, null);
        }
        
        /// <remarks/>
        public void GetDDDWXmlAsync(string wsPass, string ddwobj, object userState) {
            if ((this.GetDDDWXmlOperationCompleted == null)) {
                this.GetDDDWXmlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDDDWXmlOperationCompleted);
            }
            this.InvokeAsync("GetDDDWXml", new object[] {
                        wsPass,
                        ddwobj}, this.GetDDDWXmlOperationCompleted, userState);
        }
        
        private void OnGetDDDWXmlOperationCompleted(object arg) {
            if ((this.GetDDDWXmlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDDDWXmlCompleted(this, new GetDDDWXmlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://isocare.org/GetPrinterFormSets", RequestNamespace="http://isocare.org/", ResponseNamespace="http://isocare.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPrinterFormSets(string wsPass) {
            object[] results = this.Invoke("GetPrinterFormSets", new object[] {
                        wsPass});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPrinterFormSetsAsync(string wsPass) {
            this.GetPrinterFormSetsAsync(wsPass, null);
        }
        
        /// <remarks/>
        public void GetPrinterFormSetsAsync(string wsPass, object userState) {
            if ((this.GetPrinterFormSetsOperationCompleted == null)) {
                this.GetPrinterFormSetsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPrinterFormSetsOperationCompleted);
            }
            this.InvokeAsync("GetPrinterFormSets", new object[] {
                        wsPass}, this.GetPrinterFormSetsOperationCompleted, userState);
        }
        
        private void OnGetPrinterFormSetsOperationCompleted(object arg) {
            if ((this.GetPrinterFormSetsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPrinterFormSetsCompleted(this, new GetPrinterFormSetsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://isocare.org/GetPrinterFormSetsData", RequestNamespace="http://isocare.org/", ResponseNamespace="http://isocare.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetPrinterFormSetsData(string wsPass) {
            object[] results = this.Invoke("GetPrinterFormSetsData", new object[] {
                        wsPass});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetPrinterFormSetsDataAsync(string wsPass) {
            this.GetPrinterFormSetsDataAsync(wsPass, null);
        }
        
        /// <remarks/>
        public void GetPrinterFormSetsDataAsync(string wsPass, object userState) {
            if ((this.GetPrinterFormSetsDataOperationCompleted == null)) {
                this.GetPrinterFormSetsDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPrinterFormSetsDataOperationCompleted);
            }
            this.InvokeAsync("GetPrinterFormSetsData", new object[] {
                        wsPass}, this.GetPrinterFormSetsDataOperationCompleted, userState);
        }
        
        private void OnGetPrinterFormSetsDataOperationCompleted(object arg) {
            if ((this.GetPrinterFormSetsDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPrinterFormSetsDataCompleted(this, new GetPrinterFormSetsDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://isocare.org/GetDefaultPrinterFormSets", RequestNamespace="http://isocare.org/", ResponseNamespace="http://isocare.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDefaultPrinterFormSets(string wsPass, string userName) {
            object[] results = this.Invoke("GetDefaultPrinterFormSets", new object[] {
                        wsPass,
                        userName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDefaultPrinterFormSetsAsync(string wsPass, string userName) {
            this.GetDefaultPrinterFormSetsAsync(wsPass, userName, null);
        }
        
        /// <remarks/>
        public void GetDefaultPrinterFormSetsAsync(string wsPass, string userName, object userState) {
            if ((this.GetDefaultPrinterFormSetsOperationCompleted == null)) {
                this.GetDefaultPrinterFormSetsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDefaultPrinterFormSetsOperationCompleted);
            }
            this.InvokeAsync("GetDefaultPrinterFormSets", new object[] {
                        wsPass,
                        userName}, this.GetDefaultPrinterFormSetsOperationCompleted, userState);
        }
        
        private void OnGetDefaultPrinterFormSetsOperationCompleted(object arg) {
            if ((this.GetDefaultPrinterFormSetsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDefaultPrinterFormSetsCompleted(this, new GetDefaultPrinterFormSetsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://isocare.org/GetDefaultPrinterFormSetsByIP", RequestNamespace="http://isocare.org/", ResponseNamespace="http://isocare.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDefaultPrinterFormSetsByIP(string wsPass, string comIp) {
            object[] results = this.Invoke("GetDefaultPrinterFormSetsByIP", new object[] {
                        wsPass,
                        comIp});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDefaultPrinterFormSetsByIPAsync(string wsPass, string comIp) {
            this.GetDefaultPrinterFormSetsByIPAsync(wsPass, comIp, null);
        }
        
        /// <remarks/>
        public void GetDefaultPrinterFormSetsByIPAsync(string wsPass, string comIp, object userState) {
            if ((this.GetDefaultPrinterFormSetsByIPOperationCompleted == null)) {
                this.GetDefaultPrinterFormSetsByIPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDefaultPrinterFormSetsByIPOperationCompleted);
            }
            this.InvokeAsync("GetDefaultPrinterFormSetsByIP", new object[] {
                        wsPass,
                        comIp}, this.GetDefaultPrinterFormSetsByIPOperationCompleted, userState);
        }
        
        private void OnGetDefaultPrinterFormSetsByIPOperationCompleted(object arg) {
            if ((this.GetDefaultPrinterFormSetsByIPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDefaultPrinterFormSetsByIPCompleted(this, new GetDefaultPrinterFormSetsByIPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://isocare.org/GetXmlDataStore", RequestNamespace="http://isocare.org/", ResponseNamespace="http://isocare.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetXmlDataStore(string wsPass, string application, string libralyList, string dwobjectName, object[] ArgsList) {
            object[] results = this.Invoke("GetXmlDataStore", new object[] {
                        wsPass,
                        application,
                        libralyList,
                        dwobjectName,
                        ArgsList});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetXmlDataStoreAsync(string wsPass, string application, string libralyList, string dwobjectName, object[] ArgsList) {
            this.GetXmlDataStoreAsync(wsPass, application, libralyList, dwobjectName, ArgsList, null);
        }
        
        /// <remarks/>
        public void GetXmlDataStoreAsync(string wsPass, string application, string libralyList, string dwobjectName, object[] ArgsList, object userState) {
            if ((this.GetXmlDataStoreOperationCompleted == null)) {
                this.GetXmlDataStoreOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetXmlDataStoreOperationCompleted);
            }
            this.InvokeAsync("GetXmlDataStore", new object[] {
                        wsPass,
                        application,
                        libralyList,
                        dwobjectName,
                        ArgsList}, this.GetXmlDataStoreOperationCompleted, userState);
        }
        
        private void OnGetXmlDataStoreOperationCompleted(object arg) {
            if ((this.GetXmlDataStoreCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetXmlDataStoreCompleted(this, new GetXmlDataStoreCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://isocare.org/GetTextDataStore", RequestNamespace="http://isocare.org/", ResponseNamespace="http://isocare.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetTextDataStore(string wsPass, string application, string libralyList, string dwobjectName, object[] ArgsList) {
            object[] results = this.Invoke("GetTextDataStore", new object[] {
                        wsPass,
                        application,
                        libralyList,
                        dwobjectName,
                        ArgsList});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTextDataStoreAsync(string wsPass, string application, string libralyList, string dwobjectName, object[] ArgsList) {
            this.GetTextDataStoreAsync(wsPass, application, libralyList, dwobjectName, ArgsList, null);
        }
        
        /// <remarks/>
        public void GetTextDataStoreAsync(string wsPass, string application, string libralyList, string dwobjectName, object[] ArgsList, object userState) {
            if ((this.GetTextDataStoreOperationCompleted == null)) {
                this.GetTextDataStoreOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTextDataStoreOperationCompleted);
            }
            this.InvokeAsync("GetTextDataStore", new object[] {
                        wsPass,
                        application,
                        libralyList,
                        dwobjectName,
                        ArgsList}, this.GetTextDataStoreOperationCompleted, userState);
        }
        
        private void OnGetTextDataStoreOperationCompleted(object arg) {
            if ((this.GetTextDataStoreCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTextDataStoreCompleted(this, new GetTextDataStoreCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://isocare.org/GetProcessStatus", RequestNamespace="http://isocare.org/", ResponseNamespace="http://isocare.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetProcessStatus(string wspass, string application, string w_sheet_id) {
            object[] results = this.Invoke("GetProcessStatus", new object[] {
                        wspass,
                        application,
                        w_sheet_id});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetProcessStatusAsync(string wspass, string application, string w_sheet_id) {
            this.GetProcessStatusAsync(wspass, application, w_sheet_id, null);
        }
        
        /// <remarks/>
        public void GetProcessStatusAsync(string wspass, string application, string w_sheet_id, object userState) {
            if ((this.GetProcessStatusOperationCompleted == null)) {
                this.GetProcessStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProcessStatusOperationCompleted);
            }
            this.InvokeAsync("GetProcessStatus", new object[] {
                        wspass,
                        application,
                        w_sheet_id}, this.GetProcessStatusOperationCompleted, userState);
        }
        
        private void OnGetProcessStatusOperationCompleted(object arg) {
            if ((this.GetProcessStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProcessStatusCompleted(this, new GetProcessStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://isocare.org/RemoveProcess", RequestNamespace="http://isocare.org/", ResponseNamespace="http://isocare.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RemoveProcess(string wsPass, string application, string w_sheet_id) {
            object[] results = this.Invoke("RemoveProcess", new object[] {
                        wsPass,
                        application,
                        w_sheet_id});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveProcessAsync(string wsPass, string application, string w_sheet_id) {
            this.RemoveProcessAsync(wsPass, application, w_sheet_id, null);
        }
        
        /// <remarks/>
        public void RemoveProcessAsync(string wsPass, string application, string w_sheet_id, object userState) {
            if ((this.RemoveProcessOperationCompleted == null)) {
                this.RemoveProcessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveProcessOperationCompleted);
            }
            this.InvokeAsync("RemoveProcess", new object[] {
                        wsPass,
                        application,
                        w_sheet_id}, this.RemoveProcessOperationCompleted, userState);
        }
        
        private void OnRemoveProcessOperationCompleted(object arg) {
            if ((this.RemoveProcessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveProcessCompleted(this, new RemoveProcessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://isocare.org/ReadThaiBath", RequestNamespace="http://isocare.org/", ResponseNamespace="http://isocare.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ReadThaiBath(string wsPass, decimal number) {
            object[] results = this.Invoke("ReadThaiBath", new object[] {
                        wsPass,
                        number});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ReadThaiBathAsync(string wsPass, decimal number) {
            this.ReadThaiBathAsync(wsPass, number, null);
        }
        
        /// <remarks/>
        public void ReadThaiBathAsync(string wsPass, decimal number, object userState) {
            if ((this.ReadThaiBathOperationCompleted == null)) {
                this.ReadThaiBathOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReadThaiBathOperationCompleted);
            }
            this.InvokeAsync("ReadThaiBath", new object[] {
                        wsPass,
                        number}, this.ReadThaiBathOperationCompleted, userState);
        }
        
        private void OnReadThaiBathOperationCompleted(object arg) {
            if ((this.ReadThaiBathCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReadThaiBathCompleted(this, new ReadThaiBathCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://isocare.org/LastDayOfmonth", RequestNamespace="http://isocare.org/", ResponseNamespace="http://isocare.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.DateTime LastDayOfmonth(string wsPass, System.DateTime date) {
            object[] results = this.Invoke("LastDayOfmonth", new object[] {
                        wsPass,
                        date});
            return ((System.DateTime)(results[0]));
        }
        
        /// <remarks/>
        public void LastDayOfmonthAsync(string wsPass, System.DateTime date) {
            this.LastDayOfmonthAsync(wsPass, date, null);
        }
        
        /// <remarks/>
        public void LastDayOfmonthAsync(string wsPass, System.DateTime date, object userState) {
            if ((this.LastDayOfmonthOperationCompleted == null)) {
                this.LastDayOfmonthOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLastDayOfmonthOperationCompleted);
            }
            this.InvokeAsync("LastDayOfmonth", new object[] {
                        wsPass,
                        date}, this.LastDayOfmonthOperationCompleted, userState);
        }
        
        private void OnLastDayOfmonthOperationCompleted(object arg) {
            if ((this.LastDayOfmonthCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LastDayOfmonthCompleted(this, new LastDayOfmonthCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://isocare.org/zPhysicalPathRegistry", RequestNamespace="http://isocare.org/", ResponseNamespace="http://isocare.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string zPhysicalPathRegistry(string wsPass) {
            object[] results = this.Invoke("zPhysicalPathRegistry", new object[] {
                        wsPass});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void zPhysicalPathRegistryAsync(string wsPass) {
            this.zPhysicalPathRegistryAsync(wsPass, null);
        }
        
        /// <remarks/>
        public void zPhysicalPathRegistryAsync(string wsPass, object userState) {
            if ((this.zPhysicalPathRegistryOperationCompleted == null)) {
                this.zPhysicalPathRegistryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnzPhysicalPathRegistryOperationCompleted);
            }
            this.InvokeAsync("zPhysicalPathRegistry", new object[] {
                        wsPass}, this.zPhysicalPathRegistryOperationCompleted, userState);
        }
        
        private void OnzPhysicalPathRegistryOperationCompleted(object arg) {
            if ((this.zPhysicalPathRegistryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.zPhysicalPathRegistryCompleted(this, new zPhysicalPathRegistryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://isocare.org/zPhysicalPathXML", RequestNamespace="http://isocare.org/", ResponseNamespace="http://isocare.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string zPhysicalPathXML(string wsPass) {
            object[] results = this.Invoke("zPhysicalPathXML", new object[] {
                        wsPass});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void zPhysicalPathXMLAsync(string wsPass) {
            this.zPhysicalPathXMLAsync(wsPass, null);
        }
        
        /// <remarks/>
        public void zPhysicalPathXMLAsync(string wsPass, object userState) {
            if ((this.zPhysicalPathXMLOperationCompleted == null)) {
                this.zPhysicalPathXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnzPhysicalPathXMLOperationCompleted);
            }
            this.InvokeAsync("zPhysicalPathXML", new object[] {
                        wsPass}, this.zPhysicalPathXMLOperationCompleted, userState);
        }
        
        private void OnzPhysicalPathXMLOperationCompleted(object arg) {
            if ((this.zPhysicalPathXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.zPhysicalPathXMLCompleted(this, new zPhysicalPathXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://isocare.org/InsertDataWindow", RequestNamespace="http://isocare.org/", ResponseNamespace="http://isocare.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int InsertDataWindow(string wsPass, string xmlData, string pblName, string table, string dwObjectName, string application, int[] rows) {
            object[] results = this.Invoke("InsertDataWindow", new object[] {
                        wsPass,
                        xmlData,
                        pblName,
                        table,
                        dwObjectName,
                        application,
                        rows});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void InsertDataWindowAsync(string wsPass, string xmlData, string pblName, string table, string dwObjectName, string application, int[] rows) {
            this.InsertDataWindowAsync(wsPass, xmlData, pblName, table, dwObjectName, application, rows, null);
        }
        
        /// <remarks/>
        public void InsertDataWindowAsync(string wsPass, string xmlData, string pblName, string table, string dwObjectName, string application, int[] rows, object userState) {
            if ((this.InsertDataWindowOperationCompleted == null)) {
                this.InsertDataWindowOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertDataWindowOperationCompleted);
            }
            this.InvokeAsync("InsertDataWindow", new object[] {
                        wsPass,
                        xmlData,
                        pblName,
                        table,
                        dwObjectName,
                        application,
                        rows}, this.InsertDataWindowOperationCompleted, userState);
        }
        
        private void OnInsertDataWindowOperationCompleted(object arg) {
            if ((this.InsertDataWindowCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertDataWindowCompleted(this, new InsertDataWindowCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://isocare.org/UpdateDataWindow", RequestNamespace="http://isocare.org/", ResponseNamespace="http://isocare.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateDataWindow(string wsPass, string xmlData, string pblName, string table, string dwObjectName, string application, int[] rows) {
            object[] results = this.Invoke("UpdateDataWindow", new object[] {
                        wsPass,
                        xmlData,
                        pblName,
                        table,
                        dwObjectName,
                        application,
                        rows});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateDataWindowAsync(string wsPass, string xmlData, string pblName, string table, string dwObjectName, string application, int[] rows) {
            this.UpdateDataWindowAsync(wsPass, xmlData, pblName, table, dwObjectName, application, rows, null);
        }
        
        /// <remarks/>
        public void UpdateDataWindowAsync(string wsPass, string xmlData, string pblName, string table, string dwObjectName, string application, int[] rows, object userState) {
            if ((this.UpdateDataWindowOperationCompleted == null)) {
                this.UpdateDataWindowOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateDataWindowOperationCompleted);
            }
            this.InvokeAsync("UpdateDataWindow", new object[] {
                        wsPass,
                        xmlData,
                        pblName,
                        table,
                        dwObjectName,
                        application,
                        rows}, this.UpdateDataWindowOperationCompleted, userState);
        }
        
        private void OnUpdateDataWindowOperationCompleted(object arg) {
            if ((this.UpdateDataWindowCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateDataWindowCompleted(this, new UpdateDataWindowCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://isocare.org/SaveReportExcel", RequestNamespace="http://isocare.org/", ResponseNamespace="http://isocare.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SaveReportExcel(string wsPass, str_rptexcel astr_rptexcel) {
            object[] results = this.Invoke("SaveReportExcel", new object[] {
                        wsPass,
                        astr_rptexcel});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveReportExcelAsync(string wsPass, str_rptexcel astr_rptexcel) {
            this.SaveReportExcelAsync(wsPass, astr_rptexcel, null);
        }
        
        /// <remarks/>
        public void SaveReportExcelAsync(string wsPass, str_rptexcel astr_rptexcel, object userState) {
            if ((this.SaveReportExcelOperationCompleted == null)) {
                this.SaveReportExcelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveReportExcelOperationCompleted);
            }
            this.InvokeAsync("SaveReportExcel", new object[] {
                        wsPass,
                        astr_rptexcel}, this.SaveReportExcelOperationCompleted, userState);
        }
        
        private void OnSaveReportExcelOperationCompleted(object arg) {
            if ((this.SaveReportExcelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveReportExcelCompleted(this, new SaveReportExcelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://isocare.org/SaveReportExcelEtn", RequestNamespace="http://isocare.org/", ResponseNamespace="http://isocare.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SaveReportExcelEtn(string wsPass, str_rptexcel astr_rptexcel) {
            object[] results = this.Invoke("SaveReportExcelEtn", new object[] {
                        wsPass,
                        astr_rptexcel});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveReportExcelEtnAsync(string wsPass, str_rptexcel astr_rptexcel) {
            this.SaveReportExcelEtnAsync(wsPass, astr_rptexcel, null);
        }
        
        /// <remarks/>
        public void SaveReportExcelEtnAsync(string wsPass, str_rptexcel astr_rptexcel, object userState) {
            if ((this.SaveReportExcelEtnOperationCompleted == null)) {
                this.SaveReportExcelEtnOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveReportExcelEtnOperationCompleted);
            }
            this.InvokeAsync("SaveReportExcelEtn", new object[] {
                        wsPass,
                        astr_rptexcel}, this.SaveReportExcelEtnOperationCompleted, userState);
        }
        
        private void OnSaveReportExcelEtnOperationCompleted(object arg) {
            if ((this.SaveReportExcelEtnCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveReportExcelEtnCompleted(this, new SaveReportExcelEtnCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://isocare.org/ExportSMS", RequestNamespace="http://isocare.org/", ResponseNamespace="http://isocare.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ExportSMS(string wsPass, ref str_sms astr_sms) {
            object[] results = this.Invoke("ExportSMS", new object[] {
                        wsPass,
                        astr_sms});
            astr_sms = ((str_sms)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ExportSMSAsync(string wsPass, str_sms astr_sms) {
            this.ExportSMSAsync(wsPass, astr_sms, null);
        }
        
        /// <remarks/>
        public void ExportSMSAsync(string wsPass, str_sms astr_sms, object userState) {
            if ((this.ExportSMSOperationCompleted == null)) {
                this.ExportSMSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExportSMSOperationCompleted);
            }
            this.InvokeAsync("ExportSMS", new object[] {
                        wsPass,
                        astr_sms}, this.ExportSMSOperationCompleted, userState);
        }
        
        private void OnExportSMSOperationCompleted(object arg) {
            if ((this.ExportSMSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExportSMSCompleted(this, new ExportSMSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://isocare.org/SaveTextFile", RequestNamespace="http://isocare.org/", ResponseNamespace="http://isocare.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SaveTextFile(string wsPass, str_rptexcel astr_rptexcel) {
            object[] results = this.Invoke("SaveTextFile", new object[] {
                        wsPass,
                        astr_rptexcel});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveTextFileAsync(string wsPass, str_rptexcel astr_rptexcel) {
            this.SaveTextFileAsync(wsPass, astr_rptexcel, null);
        }
        
        /// <remarks/>
        public void SaveTextFileAsync(string wsPass, str_rptexcel astr_rptexcel, object userState) {
            if ((this.SaveTextFileOperationCompleted == null)) {
                this.SaveTextFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveTextFileOperationCompleted);
            }
            this.InvokeAsync("SaveTextFile", new object[] {
                        wsPass,
                        astr_rptexcel}, this.SaveTextFileOperationCompleted, userState);
        }
        
        private void OnSaveTextFileOperationCompleted(object arg) {
            if ((this.SaveTextFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveTextFileCompleted(this, new SaveTextFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://isocare.org/")]
    public partial class str_sms {
        
        private string xml_dataField;
        
        private string xml_smsField;
        
        private string xml_logField;
        
        private string recv_periodField;
        
        private System.DateTime operate_dateField;
        
        private string message01Field;
        
        private string message02Field;
        
        private string message03Field;
        
        private string message04Field;
        
        private string message05Field;
        
        private string message06Field;
        
        private string message07Field;
        
        private string message08Field;
        
        private string message09Field;
        
        private string message10Field;
        
        private string proc_typeField;
        
        private string smembgroup_codeField;
        
        private string emembgroup_codeField;
        
        /// <remarks/>
        public string xml_data {
            get {
                return this.xml_dataField;
            }
            set {
                this.xml_dataField = value;
            }
        }
        
        /// <remarks/>
        public string xml_sms {
            get {
                return this.xml_smsField;
            }
            set {
                this.xml_smsField = value;
            }
        }
        
        /// <remarks/>
        public string xml_log {
            get {
                return this.xml_logField;
            }
            set {
                this.xml_logField = value;
            }
        }
        
        /// <remarks/>
        public string recv_period {
            get {
                return this.recv_periodField;
            }
            set {
                this.recv_periodField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime operate_date {
            get {
                return this.operate_dateField;
            }
            set {
                this.operate_dateField = value;
            }
        }
        
        /// <remarks/>
        public string message01 {
            get {
                return this.message01Field;
            }
            set {
                this.message01Field = value;
            }
        }
        
        /// <remarks/>
        public string message02 {
            get {
                return this.message02Field;
            }
            set {
                this.message02Field = value;
            }
        }
        
        /// <remarks/>
        public string message03 {
            get {
                return this.message03Field;
            }
            set {
                this.message03Field = value;
            }
        }
        
        /// <remarks/>
        public string message04 {
            get {
                return this.message04Field;
            }
            set {
                this.message04Field = value;
            }
        }
        
        /// <remarks/>
        public string message05 {
            get {
                return this.message05Field;
            }
            set {
                this.message05Field = value;
            }
        }
        
        /// <remarks/>
        public string message06 {
            get {
                return this.message06Field;
            }
            set {
                this.message06Field = value;
            }
        }
        
        /// <remarks/>
        public string message07 {
            get {
                return this.message07Field;
            }
            set {
                this.message07Field = value;
            }
        }
        
        /// <remarks/>
        public string message08 {
            get {
                return this.message08Field;
            }
            set {
                this.message08Field = value;
            }
        }
        
        /// <remarks/>
        public string message09 {
            get {
                return this.message09Field;
            }
            set {
                this.message09Field = value;
            }
        }
        
        /// <remarks/>
        public string message10 {
            get {
                return this.message10Field;
            }
            set {
                this.message10Field = value;
            }
        }
        
        /// <remarks/>
        public string proc_type {
            get {
                return this.proc_typeField;
            }
            set {
                this.proc_typeField = value;
            }
        }
        
        /// <remarks/>
        public string smembgroup_code {
            get {
                return this.smembgroup_codeField;
            }
            set {
                this.smembgroup_codeField = value;
            }
        }
        
        /// <remarks/>
        public string emembgroup_code {
            get {
                return this.emembgroup_codeField;
            }
            set {
                this.emembgroup_codeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://isocare.org/")]
    public partial class str_rptexcel {
        
        private string as_dwobjectField;
        
        private string as_pathField;
        
        private string as_xmldwField;
        
        private string as_argument01Field;
        
        private string as_argument02Field;
        
        private string as_argument03Field;
        
        private string as_argument04Field;
        
        private string as_argument05Field;
        
        private string as_argument06Field;
        
        private string as_argument07Field;
        
        private string as_argument08Field;
        
        private string as_argument09Field;
        
        private string as_argument10Field;
        
        private string as_argument11Field;
        
        private string as_argument12Field;
        
        private string as_argument13Field;
        
        private string as_argument14Field;
        
        private string as_argument15Field;
        
        private string as_argument16Field;
        
        private string as_argument17Field;
        
        private string as_argument18Field;
        
        private string as_argument19Field;
        
        private string as_argument20Field;
        
        private string as_savetypeField;
        
        /// <remarks/>
        public string as_dwobject {
            get {
                return this.as_dwobjectField;
            }
            set {
                this.as_dwobjectField = value;
            }
        }
        
        /// <remarks/>
        public string as_path {
            get {
                return this.as_pathField;
            }
            set {
                this.as_pathField = value;
            }
        }
        
        /// <remarks/>
        public string as_xmldw {
            get {
                return this.as_xmldwField;
            }
            set {
                this.as_xmldwField = value;
            }
        }
        
        /// <remarks/>
        public string as_argument01 {
            get {
                return this.as_argument01Field;
            }
            set {
                this.as_argument01Field = value;
            }
        }
        
        /// <remarks/>
        public string as_argument02 {
            get {
                return this.as_argument02Field;
            }
            set {
                this.as_argument02Field = value;
            }
        }
        
        /// <remarks/>
        public string as_argument03 {
            get {
                return this.as_argument03Field;
            }
            set {
                this.as_argument03Field = value;
            }
        }
        
        /// <remarks/>
        public string as_argument04 {
            get {
                return this.as_argument04Field;
            }
            set {
                this.as_argument04Field = value;
            }
        }
        
        /// <remarks/>
        public string as_argument05 {
            get {
                return this.as_argument05Field;
            }
            set {
                this.as_argument05Field = value;
            }
        }
        
        /// <remarks/>
        public string as_argument06 {
            get {
                return this.as_argument06Field;
            }
            set {
                this.as_argument06Field = value;
            }
        }
        
        /// <remarks/>
        public string as_argument07 {
            get {
                return this.as_argument07Field;
            }
            set {
                this.as_argument07Field = value;
            }
        }
        
        /// <remarks/>
        public string as_argument08 {
            get {
                return this.as_argument08Field;
            }
            set {
                this.as_argument08Field = value;
            }
        }
        
        /// <remarks/>
        public string as_argument09 {
            get {
                return this.as_argument09Field;
            }
            set {
                this.as_argument09Field = value;
            }
        }
        
        /// <remarks/>
        public string as_argument10 {
            get {
                return this.as_argument10Field;
            }
            set {
                this.as_argument10Field = value;
            }
        }
        
        /// <remarks/>
        public string as_argument11 {
            get {
                return this.as_argument11Field;
            }
            set {
                this.as_argument11Field = value;
            }
        }
        
        /// <remarks/>
        public string as_argument12 {
            get {
                return this.as_argument12Field;
            }
            set {
                this.as_argument12Field = value;
            }
        }
        
        /// <remarks/>
        public string as_argument13 {
            get {
                return this.as_argument13Field;
            }
            set {
                this.as_argument13Field = value;
            }
        }
        
        /// <remarks/>
        public string as_argument14 {
            get {
                return this.as_argument14Field;
            }
            set {
                this.as_argument14Field = value;
            }
        }
        
        /// <remarks/>
        public string as_argument15 {
            get {
                return this.as_argument15Field;
            }
            set {
                this.as_argument15Field = value;
            }
        }
        
        /// <remarks/>
        public string as_argument16 {
            get {
                return this.as_argument16Field;
            }
            set {
                this.as_argument16Field = value;
            }
        }
        
        /// <remarks/>
        public string as_argument17 {
            get {
                return this.as_argument17Field;
            }
            set {
                this.as_argument17Field = value;
            }
        }
        
        /// <remarks/>
        public string as_argument18 {
            get {
                return this.as_argument18Field;
            }
            set {
                this.as_argument18Field = value;
            }
        }
        
        /// <remarks/>
        public string as_argument19 {
            get {
                return this.as_argument19Field;
            }
            set {
                this.as_argument19Field = value;
            }
        }
        
        /// <remarks/>
        public string as_argument20 {
            get {
                return this.as_argument20Field;
            }
            set {
                this.as_argument20Field = value;
            }
        }
        
        /// <remarks/>
        public string as_savetype {
            get {
                return this.as_savetypeField;
            }
            set {
                this.as_savetypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetPasswordServiceCompletedEventHandler(object sender, GetPasswordServiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPasswordServiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPasswordServiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetConnectionStringCompletedEventHandler(object sender, GetConnectionStringCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetConnectionStringCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetConnectionStringCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetConstantValueCompletedEventHandler(object sender, GetConstantValueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetConstantValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetConstantValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDataTableCompletedEventHandler(object sender, GetDataTableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetNewDocNoCompletedEventHandler(object sender, GetNewDocNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNewDocNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNewDocNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetNewDocumentNoCompletedEventHandler(object sender, GetNewDocumentNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNewDocumentNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNewDocumentNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetStatusApplicationCompletedEventHandler(object sender, GetStatusApplicationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStatusApplicationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStatusApplicationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetStatusApplicationDataCompletedEventHandler(object sender, GetStatusApplicationDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStatusApplicationDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStatusApplicationDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetApplicationThaiCompletedEventHandler(object sender, GetApplicationThaiCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetApplicationThaiCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetApplicationThaiCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void BaseFormatMemberNoCompletedEventHandler(object sender, BaseFormatMemberNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BaseFormatMemberNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BaseFormatMemberNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetBranchIdCompletedEventHandler(object sender, GetBranchIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBranchIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBranchIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VerifyLoginCompletedEventHandler(object sender, VerifyLoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetPermissMenuCompletedEventHandler(object sender, GetPermissMenuCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPermissMenuCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPermissMenuCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDDDWXmlCompletedEventHandler(object sender, GetDDDWXmlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDDDWXmlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDDDWXmlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetPrinterFormSetsCompletedEventHandler(object sender, GetPrinterFormSetsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPrinterFormSetsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPrinterFormSetsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetPrinterFormSetsDataCompletedEventHandler(object sender, GetPrinterFormSetsDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPrinterFormSetsDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPrinterFormSetsDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDefaultPrinterFormSetsCompletedEventHandler(object sender, GetDefaultPrinterFormSetsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDefaultPrinterFormSetsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDefaultPrinterFormSetsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDefaultPrinterFormSetsByIPCompletedEventHandler(object sender, GetDefaultPrinterFormSetsByIPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDefaultPrinterFormSetsByIPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDefaultPrinterFormSetsByIPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetXmlDataStoreCompletedEventHandler(object sender, GetXmlDataStoreCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetXmlDataStoreCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetXmlDataStoreCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetTextDataStoreCompletedEventHandler(object sender, GetTextDataStoreCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTextDataStoreCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTextDataStoreCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetProcessStatusCompletedEventHandler(object sender, GetProcessStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProcessStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProcessStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void RemoveProcessCompletedEventHandler(object sender, RemoveProcessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveProcessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveProcessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ReadThaiBathCompletedEventHandler(object sender, ReadThaiBathCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReadThaiBathCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReadThaiBathCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void LastDayOfmonthCompletedEventHandler(object sender, LastDayOfmonthCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LastDayOfmonthCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LastDayOfmonthCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.DateTime Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void zPhysicalPathRegistryCompletedEventHandler(object sender, zPhysicalPathRegistryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class zPhysicalPathRegistryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal zPhysicalPathRegistryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void zPhysicalPathXMLCompletedEventHandler(object sender, zPhysicalPathXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class zPhysicalPathXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal zPhysicalPathXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void InsertDataWindowCompletedEventHandler(object sender, InsertDataWindowCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertDataWindowCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertDataWindowCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateDataWindowCompletedEventHandler(object sender, UpdateDataWindowCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateDataWindowCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateDataWindowCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SaveReportExcelCompletedEventHandler(object sender, SaveReportExcelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveReportExcelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveReportExcelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SaveReportExcelEtnCompletedEventHandler(object sender, SaveReportExcelEtnCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveReportExcelEtnCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveReportExcelEtnCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ExportSMSCompletedEventHandler(object sender, ExportSMSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExportSMSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExportSMSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public str_sms astr_sms {
            get {
                this.RaiseExceptionIfNecessary();
                return ((str_sms)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SaveTextFileCompletedEventHandler(object sender, SaveTextFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveTextFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveTextFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591